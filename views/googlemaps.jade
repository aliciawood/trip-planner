extends layout
block content
  h1= title

  input(type="text", id="address", value="Povo, UT")
  button(type="submit", onclick='geocodeAddress()') submit
  
  - var restaurants = [];

  h2 Restaurants
    ul(id='restaurantList')
      - for (var i = 0; i < restaurants.length; i++)
          li= restaurants[i].name

  h2 Attractions

  h2 Hotel

  div(id='map', style='width:100%; height:500px; position:"absolute"')

  script(src='https://maps.googleapis.com/maps/api/js?key=AIzaSyBoVd2ZjQYOF-zqqAC1-llMfLF7nuT7Sw8&libraries=places')
  script 
    include ../model/TripGenerator.js
  script.
    var displayMap;
    var service;
    var test = "test";

    function initialise() { 
      displayMap = new google.maps.Map(document.getElementById('map'), {
        center: {lat: 40.2338438, lng: -111.65853370000002},
        zoom: 15 });
    }

    google.maps.event.addDomListener(window, 'load', initialise);

    function geocodeAddress() {
      var geocoder = new google.maps.Geocoder();
      var address = document.getElementById('address').value;

      geocoder.geocode({'address': address}, function(results, status) {
        if (status === google.maps.GeocoderStatus.OK) {
          var newlocation = results[0].geometry.location;
          displayMap.setCenter(newlocation);
          var marker = new google.maps.Marker({
            map: displayMap,
            position: newlocation
          });

          var infowindow = new google.maps.InfoWindow();
          google.maps.event.addListener(marker, 'click', function() {
            infowindow.setContent(address);
            infowindow.open(displayMap, this);
          });

          updatePoints(displayMap)

        } else {
          alert('Geocode was not successful for the following reason: ' + status);
        }
      });
    }

    function callback(results, status) {
      if (status == google.maps.places.PlacesServiceStatus.OK) {
        restaurants = results;
        var list = document.getElementById('restaurantList');
        list.innerHTML = '';
        for (var i = 0; i < results.length; i++) {
          var place = results[i];
          updateRestaurants(place);
          createMarker(place, displayMap);
        }
      }
    }

    function updateRestaurants(place) {
      var list = document.getElementById('restaurantList');
      var newEntry = document.createElement('li');
      newEntry.appendChild(document.createTextNode(place.name));
      list.appendChild(newEntry);
    }

    function updatePoints(map) {
      var request = {
            location: map.getCenter(),
            radius: '50000',
            types: ["food"]
      };
      service = new google.maps.places.PlacesService(displayMap);
      service.radarSearch(request, callback);
    }

    function createMarker(place, map) {
      var placeLoc = place.geometry.location;
      var marker = new google.maps.Marker({
        map: map,
        position: place.geometry.location
      });

      var infowindow = new google.maps.InfoWindow();
      google.maps.event.addListener(marker, 'click', function() {
        infowindow.setContent(place.name);
        infowindow.open(map, this);
      });
    }